
artifactory {
    contextUrl = CONTEXT_REPO_ROOT
    publish {
        repository {
            repoKey = currentBranch.call() == "release" ? "sdk-releases-local" : "sdk-snapshots-local"
            username = trusonaUsername
            password = trusonaPassword
            maven = true
        }
        defaults {
            publications("aar")
            publishArtifacts = true
            publishPom = true
            publishIvy = false
        }
    }
    resolve {
        repository {
            repoKey = currentBranch.call() == "release" ? "sdk-releases-local" : "sdk-snapshots-local"
            username = trusonaUsername
            password = trusonaPassword
            maven = true
        }
    }
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId "${theGroupId}"
            artifactId "${theArtifactId}"
            version "${trusona.version('trusona-sdk')}"
            artifact source: file("${theArtifactSource}")
            artifact source: file("${debugArtifactSource}"), classifier: "debug"

            pom.withXml {
                def dependenciesNode = asNode().appendNode("dependencies")

                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode("dependency")
                    dependencyNode.appendNode("groupId", it.group)
                    dependencyNode.appendNode("artifactId", it.name)
                    dependencyNode.appendNode("version", it.version)
                }
            }
        }
        local(MavenPublication) {
            groupId "${theGroupId}"
            artifactId "${theArtifactId}"
            version "${trusona.version('trusona-sdk')}"
            artifact source: file("${theArtifactSource}")
            artifact source: file("${debugArtifactSource}"), classifier: "debug"
            artifact(sourceJar)

            pom.withXml {
                def dependenciesNode = asNode().appendNode("dependencies")

                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode("dependency")
                    dependencyNode.appendNode("groupId", it.group)
                    dependencyNode.appendNode("artifactId", it.name)
                    dependencyNode.appendNode("version", it.version)
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}